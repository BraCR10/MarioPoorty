/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poo.mariopoorty.screens;


import java.awt.Dimension;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import poo.mariopoorty.minigames.LoadImage;

/**
 *
 * @author Brian Ramirez
 */
public class CatchTheCatScreen extends javax.swing.JFrame {
     private static final int ROWS=11;
     private static final int COLS=11;
     private static final String RESOURCEPATH = "/CatchTheCatGame/";
     private final JLabel[][] matrizSpacesLabels;
     private final ImageIcon spaceImage;
    /**
     * Creates new form CatchTheCatScreen
     */
    public CatchTheCatScreen() {
        initComponents();
        setTitle("Catch the cat");
        this.setSize(1250, 650);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
        this.setResizable(false);
        
        //spaceImage=LoadImage.loadImageAdjusted(RESOURCEPATH+"block.png",ROWS*7,COLS*5);
        spaceImage=new SpriteSelector(RESOURCEPATH+"cat.png",SpriteCatPositionsEnum.LEFT);
        matrizSpacesLabels=new JLabel[ROWS][COLS];
        putSpaces();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpPlayGround = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jpPlayGround.setBackground(new java.awt.Color(255, 102, 102));

        javax.swing.GroupLayout jpPlayGroundLayout = new javax.swing.GroupLayout(jpPlayGround);
        jpPlayGround.setLayout(jpPlayGroundLayout);
        jpPlayGroundLayout.setHorizontalGroup(
            jpPlayGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
        );
        jpPlayGroundLayout.setVerticalGroup(
            jpPlayGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 295, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPlayGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPlayGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 


    private void putSpaces(){
        this.jpPlayGround.setLayout(new GridLayout(ROWS, COLS)); 
        jpPlayGround.setPreferredSize(new Dimension(COLS * 10, ROWS * 53)); 


        for (int j = 0; j < ROWS; j++) { 
            for (int i = 0; i <COLS; i++) {
                this.matrizSpacesLabels[i][j] = new JLabel(spaceImage);
                this.matrizSpacesLabels[i][j].setVisible(true);
                this.jpPlayGround.add(matrizSpacesLabels[i][j]);
                /*
                this.matrizSpacesLabels[i][j].addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent evt) {
                        cellMouseClicked(evt);
                    }

                    @Override
                    public void mouseEntered(MouseEvent evt) {
                        cellMouseEntered(evt);
                    }

                    @Override
                    public void mouseExited(MouseEvent evt) {
                        cellMouseExited(evt);
                    }
                });
                */
                //this.currentRow=-1;

            }
        }

    jpPlayGround.revalidate(); 
    jpPlayGround.repaint(); 
    
    
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpPlayGround;
    // End of variables declaration//GEN-END:variables
}
