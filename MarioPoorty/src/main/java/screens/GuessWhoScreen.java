package screens;


import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import minigames.GuessWho;
import minigames.LoadImage;


/**
 *
 * @author Brian Ramirez
 */
public class GuessWhoScreen extends JFrame implements IScreenMethods{
    private  int MATRIZSIZE=10;
    private static final String RESOURCEPATH = "/GuessWho/";
    private ImageIcon[][] imageSegments;
    private JLabel[][] misteryBoxMatriz;
    private ArrayList<ImageIcon> images;
    private GuessWho settings;
    ArrayList<String> imagesPath ;
    /**
     * Creates new form GuessWhoScreen
     * @param settings
     */
    public GuessWhoScreen(GuessWho settings) {

        initComponents();
        setTitle("Guess Who ?");
        setSize(1250, 650);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        this.settings=settings;
        MATRIZSIZE=settings.getMATRIZSIZE();
        this.imageSegments=new ImageIcon[MATRIZSIZE][MATRIZSIZE];
        this.misteryBoxMatriz=new JLabel[MATRIZSIZE][MATRIZSIZE];
        this.imagesPath=settings.getImagesPath();
        this.images=new ArrayList<>();
        initImages();

    }

    @Override
    public void initPlayGround() {
        jpPlayGround.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();

        int labelWidth = 50;
        int labelHeight = 50;

        ArrayList<ImageIcon> imageSegmentsList =  settings.suffleImage();

        int index = 0;
        for (int i = 0; i < MATRIZSIZE; i++) {
            for (int j = 0; j < MATRIZSIZE; j++) {
                JLabel label = new JLabel();
                label.setPreferredSize(new Dimension(labelWidth, labelHeight));
                label.setHorizontalAlignment(SwingConstants.CENTER);
                label.setIcon(LoadImage.loadImageAdjusted(RESOURCEPATH+"misteryBox.jpg",labelWidth , labelHeight));
                imageSegments[i][j]=imageSegmentsList.get(index);
                misteryBoxMatriz[i][j]=label;
                index++;
                label.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent e) {
                        settings.misteryBoxClicked(e);
                    }
                });
                gbc.gridx = j;
                gbc.gridy = i;

                jpPlayGround.add(label, gbc);
            }
        }

        add(jpPlayGround);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jpImages = new javax.swing.JPanel();
        imageLabel3 = new javax.swing.JLabel();
        imageLabel5 = new javax.swing.JLabel();
        imageLabel2 = new javax.swing.JLabel();
        imageLabel1 = new javax.swing.JLabel();
        imageLabel4 = new javax.swing.JLabel();
        imageLabel6 = new javax.swing.JLabel();
        imageLabel11 = new javax.swing.JLabel();
        imageLabel10 = new javax.swing.JLabel();
        imageLabel12 = new javax.swing.JLabel();
        imageLabel9 = new javax.swing.JLabel();
        imageLabel8 = new javax.swing.JLabel();
        imageLabel7 = new javax.swing.JLabel();
        imageLabel13 = new javax.swing.JLabel();
        imageLabel14 = new javax.swing.JLabel();
        imageLabel15 = new javax.swing.JLabel();
        jpPlayGround = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jtAttempts = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 520, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 631, Short.MAX_VALUE)
        );

        jpImages.setBackground(new java.awt.Color(255, 153, 153));
        jpImages.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 5));
        jpImages.setForeground(new java.awt.Color(204, 0, 0));

        imageLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel3MouseExited(evt);
            }
        });

        imageLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel5MouseExited(evt);
            }
        });

        imageLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel2MouseExited(evt);
            }
        });

        imageLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel1MouseExited(evt);
            }
        });

        imageLabel4.setLabelFor(this);
        imageLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel4MouseExited(evt);
            }
        });

        imageLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel6MouseExited(evt);
            }
        });

        imageLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel11MouseExited(evt);
            }
        });

        imageLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel10MouseExited(evt);
            }
        });

        imageLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel12MouseExited(evt);
            }
        });

        imageLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel9MouseExited(evt);
            }
        });

        imageLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel8MouseExited(evt);
            }
        });

        imageLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel7MouseExited(evt);
            }
        });

        imageLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel13MouseExited(evt);
            }
        });

        imageLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel14MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel14MouseExited(evt);
            }
        });

        imageLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabel15MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageLabel15MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageLabel15MouseExited(evt);
            }
        });

        jpPlayGround.setBackground(new java.awt.Color(255, 153, 153));

        javax.swing.GroupLayout jpPlayGroundLayout = new javax.swing.GroupLayout(jpPlayGround);
        jpPlayGround.setLayout(jpPlayGroundLayout);
        jpPlayGroundLayout.setHorizontalGroup(
                jpPlayGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 749, Short.MAX_VALUE)
        );
        jpPlayGroundLayout.setVerticalGroup(
                jpPlayGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 609, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpImagesLayout = new javax.swing.GroupLayout(jpImages);
        jpImages.setLayout(jpImagesLayout);
        jpImagesLayout.setHorizontalGroup(
                jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpImagesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(imageLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(imageLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                                .addComponent(imageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(imageLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                                .addComponent(imageLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(imageLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(imageLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(imageLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                                .addComponent(imageLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(imageLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                                .addGap(12, 12, 12)
                                                                .addComponent(imageLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(imageLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                .addComponent(imageLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(imageLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(imageLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)))
                                .addGap(26, 26, 26)
                                .addComponent(jpPlayGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jpImagesLayout.setVerticalGroup(
                jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpImagesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jpPlayGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(imageLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(imageLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                                        .addComponent(imageLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(imageLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(imageLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(imageLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(imageLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(imageLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(imageLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jpImagesLayout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(imageLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(imageLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(imageLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(imageLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jpImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(imageLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(imageLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jpImages, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(784, 784, 784))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jpImages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 156, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jtAttempts.setEditable(false);
        jtAttempts.setText("Blocks to be removed   :");
        jtAttempts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtAttemptsActionPerformed(evt);
            }
        });

        jLabel2.setText("Select which character is the one that is hidden!!!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtAttempts, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(214, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 6, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jtAttempts)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(807, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(434, 434, 434)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void imageLabel15MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(14);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel15MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"waluigi_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=14;
    }

    private void imageLabel14MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(13);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel14MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"wario_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=13;
    }

    private void imageLabel13MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(12);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel13MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"shyguy_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=12;
    }

    private void imageLabel7MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(6);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel7MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"donkey_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=6;
    }

    private void imageLabel8MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(7);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel8MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"goomba_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=7;
    }

    private void imageLabel9MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(8);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel9MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"koopa_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=8;
    }

    private void imageLabel12MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(11);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel12MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"chainchop_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=11;
    }

    private void imageLabel10MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(9);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel10MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"bobonmb_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=9;
    }

    private void imageLabel11MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(10);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel11MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"bullet_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=10;
    }

    private void imageLabel6MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        ImageIcon image = images.get(5);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel6MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"daisy_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=5;
    }

    private void imageLabel4MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(3);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel4MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"bowser_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=3;
    }

    private void imageLabel1MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(0);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel1MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"mario_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=0;
    }

    private void imageLabel2MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        ImageIcon image = images.get(1);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel2MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"luigi_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=1;
    }

    private void imageLabel5MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        ImageIcon image = images.get(4);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel5MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"toad_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=4;
    }

    private void imageLabel3MouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        ImageIcon image = images.get(2);
        ((JLabel)evt.getSource()).setIcon(image);
    }

    private void imageLabel3MouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int width=100;
        int height=100;
        ImageIcon image = LoadImage.loadImageAdjusted(RESOURCEPATH+"peach_dimmed.png", width, height);
        ((JLabel)evt.getSource()).setIcon(image);
        settings.counterMatrizPosition=2;
    }

    private void jtAttemptsActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }

    private void imageLabel1MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel2MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);

    }

    private void imageLabel3MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel4MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel5MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel6MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel7MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel8MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel9MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel10MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel11MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel12MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel13MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel14MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    private void imageLabel15MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        settings.checkSelectedImage(evt);
    }

    @Override
    public void loadImages(){
        ImageIcon image;
        int width=100;
        int height=100;
        for (int i = 0; i < 15; i++) {
            image = LoadImage.loadImageAdjusted(RESOURCEPATH + imagesPath.get(i), width, height);
            images.add(image);
        }

    }
    private void initImages(){
        loadImages();
        imageLabel1.setIcon(images.get(0));
        imageLabel2.setIcon(images.get(1));
        imageLabel3.setIcon(images.get(2));
        imageLabel4.setIcon(images.get(3));
        imageLabel5.setIcon(images.get(4));
        imageLabel6.setIcon(images.get(5));
        imageLabel7.setIcon(images.get(6));
        imageLabel8.setIcon(images.get(7));
        imageLabel9.setIcon(images.get(8));
        imageLabel10.setIcon(images.get(9));
        imageLabel11.setIcon(images.get(10));
        imageLabel12.setIcon(images.get(11));
        imageLabel13.setIcon(images.get(12));
        imageLabel14.setIcon(images.get(13));
        imageLabel15.setIcon(images.get(14));

    }





    public ImageIcon[][] getImageSegments() {
        return imageSegments;
    }

    public JTextField getJtAttempts() {
        return jtAttempts;
    }

    public JLabel[][] getMisteryBoxMatriz() {
        return misteryBoxMatriz;
    }

    public ArrayList<String> getImagesPath() {
        return imagesPath;
    }

    public ArrayList<ImageIcon> getImages() {
        return images;
    }



    // Variables declaration - do not modify
    private javax.swing.JLabel imageLabel1;
    private javax.swing.JLabel imageLabel10;
    private javax.swing.JLabel imageLabel11;
    private javax.swing.JLabel imageLabel12;
    private javax.swing.JLabel imageLabel13;
    private javax.swing.JLabel imageLabel14;
    private javax.swing.JLabel imageLabel15;
    private javax.swing.JLabel imageLabel2;
    private javax.swing.JLabel imageLabel3;
    private javax.swing.JLabel imageLabel4;
    private javax.swing.JLabel imageLabel5;
    private javax.swing.JLabel imageLabel6;
    private javax.swing.JLabel imageLabel7;
    private javax.swing.JLabel imageLabel8;
    private javax.swing.JLabel imageLabel9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jpImages;
    private javax.swing.JPanel jpPlayGround;
    private javax.swing.JTextField jtAttempts;
    // End of variables declaration
}
